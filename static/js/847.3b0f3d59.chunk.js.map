{"version":3,"file":"static/js/847.3b0f3d59.chunk.js","mappings":"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","sources":["Api.js","pages/MovieDetails.js"],"sourcesContent":["import axios from 'axios';\nimport Notiflix from 'notiflix';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '2401e69eb96085cec1913a6203f07437';\n\nexport const fetchMovies = async () => {\n  try {\n    const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    Notiflix.Notify.failure(`${error}`);\n  }\n};\n\nexport const fetchMoviesDetails = async id => {\n  try {\n    const response = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    Notiflix.Notify.failure(`${error}`);\n  }\n};\n\nexport const fetchSearchMovies = async name => {\n  try {\n    const response = await axios.get(\n      `/search/movie?query=${name}&include_adult=false&language=en-US&page=1&api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    Notiflix.Notify.failure(`${error}`);\n  }\n};\n\nexport const fetchMoviesCast = async id => {\n  try {\n    const response = await axios.get(\n      `/movie/${id}/credits?language=en-US&api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    Notiflix.Notify.failure(`${error}`);\n  }\n};\n\nexport const fetchMoviesReviews = async id => {\n  try {\n    const response = await axios.get(\n      `/movie/${id}/reviews?language=en-US&page=1&api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    Notiflix.Notify.failure(`${error}`);\n  }\n};\n","import { useState, useEffect, useRef } from 'react';\nimport {\n  Link,\n  NavLink,\n  Outlet,\n  useParams,\n  useLocation,\n} from 'react-router-dom';\nimport { fetchMoviesDetails } from 'Api';\nimport { ColorRing } from 'react-loader-spinner';\nimport Notiflix from 'notiflix';\n\nexport default function MovieDetails() {\n  const [details, setDetails] = useState({});\n  const { movieId } = useParams();\n  const location = useLocation();\n  const [isLoading, setIsLoading] = useState(false);\n  const backLinkRef = useRef(location);\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\n  useEffect(() => {\n    try {\n      setIsLoading(true);\n      const fetchDetails = async () => {\n        const detailsResponse = await fetchMoviesDetails(movieId);\n        setDetails(detailsResponse);\n      };\n      fetchDetails();\n    } catch (error) {\n      Notiflix.Notify.failure(`${error}`);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [movieId]);\n\n  const { poster_path, title, genres, vote_average, overview } = details;\n\n  return (\n    <div>\n      {isLoading && (\n        <ColorRing\n          visible={true}\n          height=\"80\"\n          width=\"80\"\n          ariaLabel=\"blocks-loading\"\n          wrapperStyle={{}}\n          wrapperClass=\"blocks-wrapper\"\n          colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n        />\n      )}\n      <div>\n        <Link to={backLinkRef.current.state?.from || '/'}>Back</Link>\n        {poster_path && (\n          <img\n            src={\n              poster_path\n                ? `https://image.tmdb.org/t/p/w300${poster_path}`\n                : defaultImg\n            }\n            alt={title}\n          />\n        )}\n      </div>\n      <div>\n        <h1>{title}</h1>\n        <p>User Score: {vote_average}%</p>\n        <h2>Overview</h2>\n        <p>{overview}</p>\n        <h3>Genres</h3>\n        <ul>\n          {genres && genres.map(genre => <li key={genre.id}>{genre.name}</li>)}\n        </ul>\n      </div>\n      <ul>\n        <li>\n          <NavLink to={`/movies/${movieId}/cast`}>Cast</NavLink>\n        </li>\n        <li>\n          <NavLink to={`/movies/${movieId}/reviews`}>Reviews</NavLink>\n        </li>\n      </ul>\n      <Outlet />\n    </div>\n  );\n}\n"],"names":["axios","API_KEY","fetchMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","concat","sent","abrupt","data","t0","Notiflix","stop","apply","arguments","fetchMoviesDetails","_ref2","_callee2","id","_context2","_x","fetchSearchMovies","_ref3","_callee3","name","_context3","_x2","fetchMoviesCast","_ref4","_callee4","_context4","_x3","fetchMoviesReviews","_ref5","_callee5","_context5","_x4","MovieDetails","_backLinkRef$current$","_useState","useState","_useState2","_slicedToArray","details","setDetails","movieId","useParams","location","useLocation","_useState3","_useState4","isLoading","setIsLoading","backLinkRef","useRef","useEffect","fetchDetails","detailsResponse","error","poster_path","title","genres","vote_average","overview","_jsxs","children","_jsx","ColorRing","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","Link","to","current","state","from","src","alt","map","genre","NavLink","Outlet"],"sourceRoot":""}