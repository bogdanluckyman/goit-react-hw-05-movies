{"version":3,"file":"static/js/847.d531031f.chunk.js","mappings":"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","sources":["Api.js","pages/MovieDetails.js","pages/MovieDetails/MovieDetails.styled.js"],"sourcesContent":["import axios from 'axios';\nimport Notiflix from 'notiflix';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '2401e69eb96085cec1913a6203f07437';\n\nexport const fetchMovies = async () => {\n  try {\n    const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    Notiflix.Notify.failure(`${error}`);\n  }\n};\n\nexport const fetchMoviesDetails = async id => {\n  try {\n    const response = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    Notiflix.Notify.failure(`${error}`);\n  }\n};\n\nexport const fetchSearchMovies = async name => {\n  try {\n    const response = await axios.get(\n      `/search/movie?query=${name}&include_adult=false&language=en-US&page=1&api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    Notiflix.Notify.failure(`${error}`);\n  }\n};\n\nexport const fetchMoviesCast = async id => {\n  try {\n    const response = await axios.get(\n      `/movie/${id}/credits?language=en-US&api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    Notiflix.Notify.failure(`${error}`);\n  }\n};\n\nexport const fetchMoviesReviews = async id => {\n  try {\n    const response = await axios.get(\n      `/movie/${id}/reviews?language=en-US&page=1&api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    Notiflix.Notify.failure(`${error}`);\n  }\n};\n","import { useState, useEffect, useRef } from 'react';\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { fetchMoviesDetails } from 'Api';\nimport { ColorRing } from 'react-loader-spinner';\nimport Notiflix from 'notiflix';\nimport { IoArrowBackCircleSharp } from 'react-icons/io5';\nimport {\n  Back,\n  Box,\n  Container,\n  Genres,\n  GenresList,\n  GenresListItem,\n  HeroTitle,\n  Image,\n  LinkItem,\n  LinkList,\n  Overview,\n  OverviewText,\n  Score,\n  StyledLink,\n} from './MovieDetails/MovieDetails.styled';\n\nexport default function MovieDetails() {\n  const [details, setDetails] = useState({});\n  const { movieId } = useParams();\n  const location = useLocation();\n  const [isLoading, setIsLoading] = useState(false);\n  const backLinkRef = useRef(location);\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\n  useEffect(() => {\n    try {\n      setIsLoading(true);\n      const fetchDetails = async () => {\n        const detailsResponse = await fetchMoviesDetails(movieId);\n        setDetails(detailsResponse);\n      };\n      fetchDetails();\n    } catch (error) {\n      Notiflix.Notify.failure(`${error}`);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [movieId]);\n\n  const { poster_path, title, genres, vote_average, overview } = details;\n\n  return (\n    <div>\n      <Container>\n        <Back to={backLinkRef.current.state?.from || '/'}>\n          <IoArrowBackCircleSharp />\n        </Back>\n        {isLoading && (\n          <ColorRing\n            visible={true}\n            height=\"80\"\n            width=\"80\"\n            ariaLabel=\"blocks-loading\"\n            wrapperStyle={{}}\n            wrapperClass=\"blocks-wrapper\"\n            colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n          />\n        )}\n\n        {poster_path && (\n          <Image\n            src={\n              poster_path\n                ? `https://image.tmdb.org/t/p/w300${poster_path}`\n                : defaultImg\n            }\n            alt={title}\n          />\n        )}\n        <Box>\n          <HeroTitle>{title}</HeroTitle>\n          <Score>User Score: {vote_average}%</Score>\n          <Overview>Overview</Overview>\n          <OverviewText>{overview}</OverviewText>\n          <Genres>Genres</Genres>\n          <GenresList>\n            {genres &&\n              genres.map(genre => (\n                <GenresListItem key={genre.id}>{genre.name}</GenresListItem>\n              ))}\n          </GenresList>\n\n          <LinkList>\n            <LinkItem>\n              <StyledLink to={`/movies/${movieId}/cast`}>Cast</StyledLink>\n            </LinkItem>\n            <LinkItem>\n              <StyledLink to={`/movies/${movieId}/reviews`}>Reviews</StyledLink>\n            </LinkItem>\n          </LinkList>\n        </Box>\n      </Container>\n      <Outlet />\n    </div>\n  );\n}\n","import { Link, NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n  margin-top: 20px;\n`;\n\nexport const Back = styled(Link)`\n  text-decoration: none;\n  color: #333;\n  font-size: 30px;\n  transition: color 0.3s ease-in-out;\n  &:hover {\n    color: red;\n  }\n`;\nexport const Image = styled.img`\n  width: 300px;\n  height: auto;\n  border-radius: 5px;\n  margin-left: 20px;\n`;\nexport const HeroTitle = styled.h1`\n  width: 60%;\n  font-size: 24px;\n  margin-bottom: 10px;\n`;\nexport const Score = styled.p`\n  width: 60%;\n  font-size: 16px;\n  margin-bottom: 10px;\n`;\nexport const Overview = styled.h2`\n  width: 60%;\n  font-size: 20px;\n  margin-bottom: 10px;\n`;\nexport const OverviewText = styled.p`\n  width: 60%;\n  font-size: 16px;\n  margin-bottom: 10px;\n`;\nexport const Genres = styled.h3`\n  width: 60%;\n  font-size: 18px;\n  margin-bottom: 10px;\n`;\nexport const GenresList = styled.ul`\n  list-style-type: none;\n  padding: 0;\n`;\nexport const GenresListItem = styled.li`\n  font-size: 16px;\n  margin-bottom: 5px;\n`;\n\nexport const Box = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const LinkList = styled.ul`\n  list-style-type: none;\n  padding: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 20px;\n`;\nexport const LinkItem = styled.li`\n  margin-bottom: 10px;\n`;\nexport const StyledLink = styled(NavLink)`\n  text-decoration: none;\n  color: white;\n  font-size: 16px;\n  transition: background-color 0.3s ease-in-out;\n  padding: 8px 16px;\n  border-radius: 5px;\n  background-color: #1a1a1a;\n  margin-bottom: 10px;\n  display: inline-block;\n  &:hover {\n    color: white;\n    background-color: red;\n  }\n`;\n"],"names":["axios","API_KEY","fetchMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","concat","sent","abrupt","data","t0","Notiflix","stop","apply","arguments","fetchMoviesDetails","_ref2","_callee2","id","_context2","_x","fetchSearchMovies","_ref3","_callee3","name","_context3","_x2","fetchMoviesCast","_ref4","_callee4","_context4","_x3","fetchMoviesReviews","_ref5","_callee5","_context5","_x4","MovieDetails","_backLinkRef$current$","_useState","useState","_useState2","_slicedToArray","details","setDetails","movieId","useParams","location","useLocation","_useState3","_useState4","isLoading","setIsLoading","backLinkRef","useRef","useEffect","fetchDetails","detailsResponse","error","poster_path","title","genres","vote_average","overview","_jsxs","children","Container","_jsx","Back","to","current","state","from","IoArrowBackCircleSharp","ColorRing","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","Image","src","alt","Box","HeroTitle","Score","Overview","OverviewText","Genres","GenresList","map","genre","GenresListItem","LinkList","LinkItem","StyledLink","Outlet","styled","_templateObject","_taggedTemplateLiteral","Link","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","_templateObject12","_templateObject13","NavLink","_templateObject14"],"sourceRoot":""}