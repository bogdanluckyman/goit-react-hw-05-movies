{"version":3,"file":"static/js/170.4023cf1b.chunk.js","mappings":"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","sources":["Api.js","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.js","pages/Movies/Movies.styled.js","pages/Movies.js"],"sourcesContent":["import axios from 'axios';\nimport Notiflix from 'notiflix';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '2401e69eb96085cec1913a6203f07437';\n\nexport const fetchMovies = async () => {\n  try {\n    const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    Notiflix.Notify.failure(`${error}`);\n  }\n};\n\nexport const fetchMoviesDetails = async id => {\n  try {\n    const response = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    Notiflix.Notify.failure(`${error}`);\n  }\n};\n\nexport const fetchSearchMovies = async name => {\n  try {\n    const response = await axios.get(\n      `/search/movie?query=${name}&include_adult=false&language=en-US&page=1&api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    Notiflix.Notify.failure(`${error}`);\n  }\n};\n\nexport const fetchMoviesCast = async id => {\n  try {\n    const response = await axios.get(\n      `/movie/${id}/credits?language=en-US&api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    Notiflix.Notify.failure(`${error}`);\n  }\n};\n\nexport const fetchMoviesReviews = async id => {\n  try {\n    const response = await axios.get(\n      `/movie/${id}/reviews?language=en-US&page=1&api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    Notiflix.Notify.failure(`${error}`);\n  }\n};\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style-type: none;\n  padding: 0;\n  column-count: 3;\n  column-gap: 20px;\n`;\n\nexport const ListItem = styled.li`\n  margin-bottom: 15px;\n`;\n\nexport const ItemLink = styled(Link)`\n  text-decoration: none;\n  color: #333;\n  transition: color 0.3s ease-in-out, background-color 0.3s ease-in-out;\n  display: block;\n  padding: 10px;\n  border-radius: 5px;\n\n  &:hover,\n  :focus {\n    color: yellow;\n    background-color: #333;\n  }\n`;\n\nexport const ItemText = styled.p`\n  margin: 0;\n  font-size: 18px;\n  font-weight: bold;\n`;\n","import { useLocation } from 'react-router-dom';\nimport { ItemLink, ItemText, List, ListItem } from './MoviesList.styled';\n\nexport const NameList = ({ movie }) => {\n  const location = useLocation();\n\n  return (\n    <div>\n      <List>\n        {movie.map(item => (\n          <ListItem key={item.id}>\n            <ItemLink to={`/movies/${item.id}`} state={{ from: location }}>\n              <ItemText>{item.title}</ItemText>\n            </ItemLink>\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledInput = styled.input`\n  padding: 10px;\n  margin-right: 10px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n`;\n\nexport const StyledBtn = styled.button`\n  padding: 10px 15px;\n  background-color: #333;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n`;\n\nexport const Container = styled.div`\n  margin-top: 20px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useNavigate, useSearchParams, useLocation } from 'react-router-dom';\nimport { fetchSearchMovies } from 'Api';\nimport { NameList } from 'components/MoviesList/MoviesList';\nimport { ColorRing } from 'react-loader-spinner';\nimport Notiflix from 'notiflix';\nimport { Container, StyledBtn, StyledInput } from './Movies/Movies.styled';\n\nexport default function SearchMovie() {\n  const [searchValue, setSearchValue] = useState('');\n  const [movieList, setMovieList] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [isSearching, setIsSearching] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const queryParam = searchParams.get('query') || '';\n\n  useEffect(() => {\n    try {\n      setIsLoading(true);\n      setSearchValue(queryParam);\n    } catch (error) {\n      Notiflix.Notify.failure(`${error}`);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [queryParam]);\n\n  useEffect(() => {\n    try {\n      setIsLoading(true);\n\n      if (isSearching && searchValue.trim() !== '') {\n        const foundMovie = async () => {\n          try {\n            const movies = await fetchSearchMovies(searchValue);\n            setMovieList(movies.results);\n            searchParams.set('query', searchValue);\n            setSearchParams(searchParams);\n          } catch (error) {\n            Notiflix.Notify.failure(`${error}`);\n          } finally {\n            setIsLoading(false);\n          }\n        };\n\n        foundMovie();\n        setIsSearching(false);\n      } else if (isSearching) {\n        Notiflix.Notify.warning('Please enter a movie title.');\n        setIsLoading(false);\n      }\n    } catch (error) {\n      Notiflix.Notify.failure(`${error}`);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [searchValue, isSearching, searchParams, setSearchParams]);\n\n  useEffect(() => {\n    if (location.state?.query && location.state.query !== searchValue) {\n      setSearchValue(location.state.query);\n      setIsSearching(true);\n    }\n  }, [location.state, searchValue]);\n\n  const handleInputChange = evt => setSearchValue(evt.target.value);\n\n  const handleSearchClick = async () => {\n    if (searchValue.trim() !== '') {\n      setIsSearching(true);\n      navigate(`/movies`, { state: { query: searchValue } });\n    } else {\n      Notiflix.Notify.warning('Please enter a movie title.');\n    }\n  };\n\n  return (\n    <Container>\n      {isLoading && (\n        <ColorRing\n          visible={true}\n          height=\"80\"\n          width=\"80\"\n          ariaLabel=\"blocks-loading\"\n          wrapperStyle={{}}\n          wrapperClass=\"blocks-wrapper\"\n          colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n        />\n      )}\n      <StyledInput\n        type=\"text\"\n        placeholder=\"Enter the movie title\"\n        value={searchValue}\n        onChange={handleInputChange}\n      />\n      <StyledBtn onClick={handleSearchClick}>Search</StyledBtn>\n      <NameList movie={movieList} />\n    </Container>\n  );\n}\n"],"names":["axios","API_KEY","fetchMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","concat","sent","abrupt","data","t0","Notiflix","stop","apply","arguments","fetchMoviesDetails","_ref2","_callee2","id","_context2","_x","fetchSearchMovies","_ref3","_callee3","name","_context3","_x2","fetchMoviesCast","_ref4","_callee4","_context4","_x3","fetchMoviesReviews","_ref5","_callee5","_context5","_x4","List","styled","_templateObject","_taggedTemplateLiteral","ListItem","_templateObject2","ItemLink","Link","_templateObject3","ItemText","_templateObject4","NameList","movie","location","useLocation","_jsx","children","map","item","to","state","from","title","StyledInput","StyledBtn","Container","SearchMovie","_useState","useState","_useState2","_slicedToArray","searchValue","setSearchValue","_useState3","_useState4","movieList","setMovieList","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","_useState5","_useState6","isSearching","setIsSearching","_useState7","_useState8","isLoading","setIsLoading","navigate","useNavigate","queryParam","get","useEffect","error","trim","foundMovie","movies","results","set","finish","_location$state","query","handleSearchClick","_jsxs","ColorRing","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","type","placeholder","value","onChange","evt","target","onClick"],"sourceRoot":""}