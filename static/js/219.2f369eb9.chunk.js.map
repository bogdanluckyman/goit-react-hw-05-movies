{"version":3,"file":"static/js/219.2f369eb9.chunk.js","mappings":"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","sources":["Api.js","components/Cast/Cast.styled.js","components/Cast/Cast.js"],"sourcesContent":["import axios from 'axios';\nimport Notiflix from 'notiflix';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '2401e69eb96085cec1913a6203f07437';\n\nexport const fetchMovies = async () => {\n  try {\n    const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    Notiflix.Notify.failure(`${error}`);\n  }\n};\n\nexport const fetchMoviesDetails = async id => {\n  try {\n    const response = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    Notiflix.Notify.failure(`${error}`);\n  }\n};\n\nexport const fetchSearchMovies = async name => {\n  try {\n    const response = await axios.get(\n      `/search/movie?query=${name}&include_adult=false&language=en-US&page=1&api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    Notiflix.Notify.failure(`${error}`);\n  }\n};\n\nexport const fetchMoviesCast = async id => {\n  try {\n    const response = await axios.get(\n      `/movie/${id}/credits?language=en-US&api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    Notiflix.Notify.failure(`${error}`);\n  }\n};\n\nexport const fetchMoviesReviews = async id => {\n  try {\n    const response = await axios.get(\n      `/movie/${id}/reviews?language=en-US&page=1&api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    Notiflix.Notify.failure(`${error}`);\n  }\n};\n","import styled from 'styled-components';\n\nexport const ActorsList = styled.ul`\n  list-style-type: none;\n  padding: 0;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nexport const ListItem = styled.li`\n  width: calc(16.666% - 10px);\n  margin: 10px;\n  padding: 10px;\n  border: 1px solid #555;\n  border-radius: 5px;\n  box-sizing: border-box;\n  text-align: center;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n  background-color: #eee;\n`;\n\nexport const ActorName = styled.b`\n  display: block;\n  font-size: 14px;\n  margin-bottom: 5px;\n`;\n\nexport const ItemText = styled.p`\n  font-size: 12px;\n  margin: 5px 0;\n`;\n\nexport const ActorPoster = styled.img`\n  width: 100%;\n  height: auto;\n  border-radius: 5px;\n  margin-top: 10px;\n`;\n","import { fetchMoviesCast } from 'Api';\nimport Notiflix from 'notiflix';\nimport { useState, useEffect } from 'react';\nimport { ColorRing } from 'react-loader-spinner';\nimport { useParams } from 'react-router-dom';\nimport {\n  ActorName,\n  ActorPoster,\n  ActorsList,\n  ItemText,\n  ListItem,\n} from './Cast.styled';\n\nexport default function MovieCast() {\n  const [actorsList, setActorsList] = useState([]);\n  const { movieId } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n  useEffect(() => {\n    const getActors = async () => {\n      try {\n        setIsLoading(true);\n        const actorsArr = await fetchMoviesCast(movieId);\n        setActorsList(actorsArr.cast);\n      } catch (error) {\n        Notiflix.Notify.failure(`${error}`);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getActors();\n  }, [movieId]);\n\n  return (\n    <div>\n      {isLoading && (\n        <ColorRing\n          visible={true}\n          height=\"80\"\n          width=\"80\"\n          ariaLabel=\"blocks-loading\"\n          wrapperStyle={{}}\n          wrapperClass=\"blocks-wrapper\"\n          colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n        />\n      )}\n      <ActorsList>\n        {actorsList.map(({ id, name, character, profile_path }) => (\n          <ListItem key={id}>\n            <ActorName>{name}</ActorName>\n            <ItemText>Character: {character}</ItemText>\n            {profile_path && (\n              <ActorPoster\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w200${profile_path}`\n                    : defaultImg\n                }\n                alt={name}\n              />\n            )}\n          </ListItem>\n        ))}\n      </ActorsList>\n    </div>\n  );\n}\n"],"names":["axios","API_KEY","fetchMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","concat","sent","abrupt","data","t0","Notiflix","stop","apply","arguments","fetchMoviesDetails","_ref2","_callee2","id","_context2","_x","fetchSearchMovies","_ref3","_callee3","name","_context3","_x2","fetchMoviesCast","_ref4","_callee4","_context4","_x3","fetchMoviesReviews","_ref5","_callee5","_context5","_x4","ActorsList","styled","_templateObject","_taggedTemplateLiteral","ListItem","_templateObject2","ActorName","_templateObject3","ItemText","_templateObject4","ActorPoster","_templateObject5","MovieCast","_useState","useState","_useState2","_slicedToArray","actorsList","setActorsList","movieId","useParams","_useState3","_useState4","isLoading","setIsLoading","useEffect","getActors","actorsArr","cast","finish","_jsxs","children","_jsx","ColorRing","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","map","character","profile_path","src","alt"],"sourceRoot":""}