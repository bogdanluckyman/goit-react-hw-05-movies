{"version":3,"file":"static/js/261.9f861858.chunk.js","mappings":"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","sources":["components/Api.js","components/pages/MovieDetails.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '2401e69eb96085cec1913a6203f07437';\n\nexport const fetchMovies = async () => {\n  try {\n    const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMoviesDetails = async id => {\n  try {\n    const response = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchSearchMovies = async name => {\n  try {\n    const response = await axios.get(\n      `/search/movie?query=${name}&include_adult=false&language=en-US&page=1&api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMoviesCast = async id => {\n  try {\n    const response = await axios.get(\n      `/movie/${id}/credits?language=en-US&api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMoviesReviews = async id => {\n  try {\n    const response = await axios.get(\n      `/movie/${id}/reviews?language=en-US&page=1&api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import { fetchMoviesDetails } from 'components/Api';\nimport { useRef, useState } from 'react';\nimport { useEffect } from 'react';\nimport {\n  Link,\n  NavLink,\n  Outlet,\n  useLocation,\n  useParams,\n} from 'react-router-dom';\n\nexport default function MovieDetails() {\n  const [details, setDetails] = useState({});\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkRef = useRef(location);\n\n  useEffect(() => {\n    const fetchDetails = async () => {\n      const detailsResponce = await fetchMoviesDetails(movieId);\n      setDetails(detailsResponce);\n    };\n    fetchDetails();\n  }, [movieId]);\n\n  const { poster_path, title, genres, vote_average, overview } = details;\n\n  return (\n    <div>\n      <div>\n        <Link to={backLinkRef.current?.from ?? '/'}>Back</Link>\n        {poster_path && (\n          <img\n            src={`https://image.tmdb.org/t/p/w300${poster_path}`}\n            alt={title}\n          />\n        )}\n      </div>\n      <div>\n        <h1>{title}</h1>\n        <p>User Score: {vote_average}%</p>\n        <h2>Overview</h2>\n        <p>{overview}</p>\n        <h3>Genres</h3>\n        <ul>\n          {genres && genres.map(genre => <li key={genre.id}>{genre.name}</li>)}\n        </ul>\n      </div>\n      <ul>\n        <li>\n          <NavLink to=\"cast\">Cast</NavLink>\n        </li>\n        <li>\n          <NavLink to=\"reviews\">Reviews</NavLink>\n        </li>\n      </ul>\n      <Outlet />\n    </div>\n  );\n}\n"],"names":["axios","API_KEY","fetchMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","concat","sent","abrupt","data","t0","console","log","stop","apply","arguments","fetchMoviesDetails","_ref2","_callee2","id","_context2","_x","fetchSearchMovies","_ref3","_callee3","name","_context3","_x2","fetchMoviesCast","_ref4","_callee4","_context4","_x3","fetchMoviesReviews","_ref5","_callee5","_context5","_x4","MovieDetails","_backLinkRef$current$","_backLinkRef$current","_useState","useState","_useState2","_slicedToArray","details","setDetails","movieId","useParams","location","useLocation","backLinkRef","useRef","useEffect","fetchDetails","detailsResponce","poster_path","title","genres","vote_average","overview","_jsxs","children","_jsx","Link","to","current","from","src","alt","map","genre","NavLink","Outlet"],"sourceRoot":""}